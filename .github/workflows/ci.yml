on: [push, pull_request]

# Workflow to run build checks/tests/lints for each commit/PR,
# and then upload the artifacts to our staging server
name: build/test
env:
  BASE_STAGING_URL: https://staging.archit.us
  ARCHIVE_NAME: dist.tar.gz

jobs:
  build:
    name: Build
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Store build time
        id: build-time
        shell: bash
        run: >-
          echo "::set-output name=time::$(date --iso-8601=seconds)"

      - name: Add pre comment to PR
        uses: architus/staging-comment-action@master
        if: github.event_name == 'pull_request'
        with:
          mode: pre
          build-time: ${{ steps.build-time.outputs.time }}
          base-staging-url: ${{ env.BASE_STAGING_URL }}
          GITHUB_TOKEN: ${{ secrets.ARCHITUS_BOT_TOKEN }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Resolve staging URL
        id: resolve-staging
        shell: bash
        run: >-
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
              echo "::set-output name=path::pr/$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"
          else
              echo "::set-output name=path::commit/$(echo $GITHUB_SHA | cut -c1-7)"
          fi

      - name: Build website
        id: build
        shell: bash
        env:
          SITE_ROOT: ${{ env.BASE_STAGING_URL }}
          BASE_PATH: ${{ steps.resolve-staging.outputs.path }}
        run: >-
          # Store the pre-build time
          T="$(date +%s)"

          yarn build --no-type-check
          exit_code=$?

          # Calculate the build duration
          T="$(($(date +%s)-T))"
          echo "::set-output name=duration::${T}"

          echo "Build finished in $T seconds with exit code $exit_code"
          # Re-raise exit code
          exit $exit_code

      - name: Create archive
        run: tar -czvf ../${{ env.ARCHIVE_NAME }} .
        working-directory: dist

      - name: Upload built archive to staging API
        uses: architus/upload-api-action@master
        with:
          archive-path: ./${{ env.ARCHIVE_NAME }}
          api-root: ${{ env.BASE_STAGING_URL }}/api
          token: ${{ secrets.STAGING_UPLOAD_API_TOKEN }}

      - name: Add post comment to PR
        uses: architus/staging-comment-action@master
        if: github.event_name == 'pull_request'
        with:
          mode: post
          build-time: ${{ steps.build-time.outputs.time }}
          build-duration: ${{ steps.build.outputs.duration }}
          base-staging-url: ${{ env.BASE_STAGING_URL }}
          GITHUB_TOKEN: ${{ secrets.ARCHITUS_BOT_TOKEN }}
