on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'app/**'

# Workflow to run build checks/lints/tests for each open PR, for which
# the tests passing is a required condition for merging
name: ci
env:
  WORKING_DIR: ./app
defaults:
  run:
    working-directory: ./app

jobs:
  # Run ESLint
  lint:
    name: Lint
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(join(env.WORKING_DIR, '/**/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run eslint
        run: yarn lint

  # Run TSC (TypeScript compiler/typechecker)
  typecheck:
    name: Type check
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load Yarn cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(join(env.WORKING_DIR, '/**/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run tsc
        run: yarn typecheck
