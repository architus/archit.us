@import "scss/colors";
@import "scss/util";

%base-style {
    @include dark {
        color: $-light;
    }

    @include light {
        background-color: $light-500 !important;
        color: $-dark;
    }
}

.auto-complete-input {
    input {
        @extend %base-style;

        width: 100%;
        box-shadow: none !important;
        border-color: transparent !important;
    }

    .react-autosuggest__container {
        position: relative;

        .react-autosuggest__suggestions-container {
            position: absolute;
            width: 100%;

            &::after {
                position: absolute;
                top: -38px;
                left: 0;
                bottom: 0;
                right: 0;
                box-shadow: none;
                content: " ";
                border-radius: 8px;
                @include transitions("box-shadow");
                pointer-events: none;
                z-index: 1;
                border: 1px solid #ced4da;

                @include dark {
                    border-color: transparent;
                }
            }
        }

        .react-autosuggest__suggestions-list {
            @extend %base-style;

            position: relative;
            padding: 0.125rem 0 0.25rem;
            margin: 0 !important;
            z-index: 10;

            list-style: none;
            text-align: left;
            border-top: 1px solid rgba(#ced4da, 0.5);
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;

            @include light {
                background-color: $light-400 !important;
            }

            @include dark {
                background-color: color-adjust($-dark, 5%) !important;
                border-color: rgba($light-400, 0.1);
            }
        }

        .react-autosuggest__suggestion {
            padding: 0.4rem 0.75rem;
            margin: 0 !important;
            cursor: pointer;

            &--highlighted {
                background-color: rgba($-primary, 0.1);
            }
        }

        &--open {
            input {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }

            .react-autosuggest__suggestions-container {
                &::after {
                    z-index: 10;
                }
            }
        }
    }

    // ? ============
    // ? State styles
    // ? ============

    &:focus-within {
        .react-autosuggest__suggestions-container::after {
            @include highlight-shadow($-primary);
        }
    }

    @mixin status-state($color) {
        &:focus-within {
            .react-autosuggest__suggestions-container::after {
                @include highlight-shadow($color);
            }
        }

        .react-autosuggest__suggestions-container::after {
            border-color: $color !important;
        }
    }

    &.is-invalid {
        @include status-state($-danger);
    }

    &.is-valid {
        @include status-state($-success);
    }
}
