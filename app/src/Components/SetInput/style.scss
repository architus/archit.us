@import "scss/colors";
@import "scss/theme";

.set-input {
    @include transitions("box-shadow");

    border-radius: 8px;
    border: 1px solid rgba(#ced4da, 0.5);

    @include dark {
        border-color: transparent;
    }

    &--items-pane {
        position: relative;
        min-height: 38px;
        padding: 0.5rem 0.5rem 0.05rem;

        border-bottom: 1px solid rgba(#ced4da, 0.5);
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;

        @include light {
            background-color: $light-350 !important;
            color: $-dark;
        }

        @include dark {
            background-color: color-adjust($-dark, 2%) !important;
            border-color: rgba($light-400, 0.1);
            color: $-light;
        }
    }

    &--input {
        display: flex;
        flex-direction: row;
        position: relative;
        z-index: 2;

        .auto-complete-input {
            &:not(.is-valid):not(.is-invalid) {
                .react-autosuggest__suggestions-container {
                    &::after {
                        border: none !important;
                    }
                }
            }

            .react-autosuggest__suggestions-container {
                &::after {
                    // top: -36px !important;
                    border-top-right-radius: 0 !important;
                    border-top-left-radius: 0 !important;
                }

                &:not(.react-autosuggest__suggestions-container--open)::after {
                    border-bottom-right-radius: 0 !important;
                }
            }
        }

        input {
            border-radius: 0;
            border-bottom-left-radius: 8px;

            &.form-control:not(.is-valid):not(.is-invalid) {
                border: none !important;
            }
        }

        button {
            border-radius: 0;
            border-bottom-right-radius: 8px;
            border-right: none !important;
            border-top: none !important;
            border-bottom: none !important;
            flex-grow: 0;

            &::after {
                display: none !important;
            }
        }

        & > :not(button) {
            flex-grow: 1;
        }
    }

    &--item {
        @include transitions("box-shadow, transform");
        @extend %button-blank;
        $this: &;

        display: inline-flex;
        position: relative;
        flex-direction: row;
        align-items: center;
        padding: 0.25rem 0.25rem 0.25rem 0.5rem;
        margin-bottom: 0.5rem;
        margin-right: 0.5rem;
        max-width: 100%;

        border-radius: 6px;
        color: $-light;
        background-color: $-primary;
        cursor: pointer;
        will-change: transform;
        transform: none;

        @include light {
            &:focus {
                box-shadow: highlight-shadow-value($-primary) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-primary), $drop-shadow !important;
                }
            }
        }

        @include dark {
            background-color: rgba($-light, 0.1) !important;

            &:focus {
                box-shadow: highlight-shadow-value($-light) !important;

                &:hover {
                    box-shadow: highlight-shadow-value($-light), $drop-shadow !important;
                }
            }
        }

        & > div:first-child {
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        &:hover {
            box-shadow: $drop-shadow;
            // transform: translateY(-1px);
        }

        &:hover,
        &:focus {
            .set-input--remove {
                color: rgba($-light, 0.75);
            }
        }

        &:active {
            .set-input--remove {
                color: rgba($-light, 0.95);
            }
        }
    }

    &--remove {
        @include transitions("color");
        padding: 0 0.25rem 0 0.5rem;

        color: rgba($-light, 0.4);
        box-shadow: none !important;

        @include dark {
            color: rgba($-light, 0.25);
        }
    }
}
